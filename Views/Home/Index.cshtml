@{
ViewData["Title"] = "Study Tracker";
}

<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>@ViewData["Title"]</title>
  <link rel="stylesheet" href="~/css/studytracker.css" />
</head>
<body>
<div class="card">
  <h1>📚 Study Tracker</h1>
  <p class="subtitle">Track your study sessions & stay motivated!</p>

  <label for="start">Start Time</label>
  <input type="time" id="start">

  <label for="end">End Time</label>
  <input type="time" id="end">

  <button onclick="submitStudy()">Submit</button>

  <div class="result" id="result"></div>
  <div class="progress-container">
    <div class="progress-bar" id="progressBar"></div>
  </div>
  <audio id="audioPlayer" controls></audio>
</div>

<script>
  async function submitStudy() {
    const start = document.getElementById('start').value;
    const end = document.getElementById('end').value;
    const resultDiv = document.getElementById('result');
    const audioPlayer = document.getElementById('audioPlayer');
    const progressBar = document.getElementById('progressBar');

    if (!start || !end) {
      resultDiv.innerText = "⚠️ Please enter both start and end times.";
      return;
    }

    const startTime = new Date(`1970-01-01T${start}:00`);
    const endTime = new Date(`1970-01-01T${end}:00`);
    let hours = (endTime - startTime) / (1000 * 60 * 60);
    if (hours < 0) hours += 24;

    resultDiv.innerText = `✅ You studied for ${hours.toFixed(2)} hours.`;

    let progress = Math.min((hours / 8) * 100, 100);
    progressBar.style.width = progress + "%";

    const logResponse = await fetch("https://localhost:7078/api/studylogs", {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({ date: new Date(), startTime, endTime, hours })
    });

    if (!logResponse.ok) {
      resultDiv.innerText = "❌ Error saving study log.";
      return;
    }

    let category;
    if (hours < 2) category = "Little";
    else if (hours <= 5) category = "Good";
    else category = "Exceptional";

    const audioResponse = await fetch(`https://localhost:7078/api/audiomessages/random/${category}`);
    if (!audioResponse.ok) {
      resultDiv.innerText += " (no audio available 🎵)";
      return;
    }

    const audio = await audioResponse.json();
    audioPlayer.src = `https://localhost:7078${audio.filePath}`;
    audioPlayer.load();
    audioPlayer.play();
  }
</script>
</body>
</html>
